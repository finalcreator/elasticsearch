1. 常见查询
#crate an index which name is customer and its id=1,name="Jole Luo"
PUT /customer/_doc/1
{
  "name": "Jole Luo"
}

#search doc from index customer which id=1
GET /customer/_doc/1

#see all indices
GET /_cat/indices?v=true

#By default, the hits section of the response includes the first 10 documents that match the search criteria
GET /bank/_search
{
  "query": { "match_all": {} },
  "sort": [
    { "account_number": "asc" }
  ]
}

GET /bank/_search
{
  "query": { "match_all": {} },
  "sort": [
    { "account_number": "asc" }
  ],
  "from": 10,
  "size": 10
}

#address contains mill or lane, ignoring case
GET /bank/_search
{
  "query": { "match": { "address": "mill lane" } }
}

#address matches which contains "mill lane' only, ignoring case
GET /bank/_search
{
  "query": { "match_phrase": { "address": "mill lane" } }
}


#bool query. search age=40 and state != "ID". By default, case is ignored 
#Each must, should, and must_not element in a Boolean query is referred to as a query clause. How well a document meets the criteria in each must or should clause contributes to the document’s relevance score. The higher the score, the better the document matches your search criteria. By default, Elasticsearch returns documents ranked by these relevance scores.

GET /bank/_search
{
  "query": {
    "bool": {
      "must": [
        { "match": { "age": "40" } }
      ],
      "must_not": [
        { "match": { "state": "ID" } }
      ]
    }
  }
}

#use filter
GET /bank/_search
{
  "query": {
    "bool": {
      "must": { "match_all": {} },
      "filter": {
        "range": {
          "balance": {
            "gte": 20000,
            "lte": 30000
          }
        }
      }
    }
  }
}

2. 查询结果解释
GET /bank/_search
{
  "query": { "match": { "address": "mill lane" } },
  "from": 0,
  "size": 1
}

{
  "took" : 0,
  "timed_out" : false,
  "_shards" : {
    "total" : 1,
    "successful" : 1,
    "skipped" : 0,
    "failed" : 0
  },
  "hits" : {
    "total" : {
      "value" : 19,
      "relation" : "eq"
    },
    "max_score" : 9.507477,
    "hits" : [ #hits里记录了满足条件的数据
      {
        "_index" : "bank", #doc所在的index
        "_type" : "_doc", #7.0后，type默认都是_doc
        "_id" : "136", #id, 唯一
        "_score" : 9.507477, #评分越高，说明搜索出的结果相关度越高
        "_source" : {  #文档原始的json数据
          "account_number" : 136,
          "balance" : 45801,
          "firstname" : "Winnie",
          "lastname" : "Holland",
          "age" : 38,
          "gender" : "M",
          "address" : "198 Mill Lane",
          "employer" : "Neteria",
          "email" : "winnieholland@neteria.com",
          "city" : "Urie",
          "state" : "IL"
        }
      }
    ]
  }
}
